/**
 * Magicssian
 * A CSS Boilerplate
 * Version: 0.1.0
 * http://codeinalabMX.github.io/magicssian
 * License: MIT
 *
 * Contents:
 * Reset
 * Base
 * Components
 * Utilities
 */


/**
 * Reset
 *
 * Custom reset & normalization
 * 
 * Old school references:
 * html5doctor.com Reset Stylesheet v1.6.1 http://html5doctor.com/html-5-reset-stylesheet/
 * Eric Meyer's Reset CSS v2.0 http://meyerweb.com/eric/tools/css/reset/
 * Normalize github.com/necolas/normalize.css
 */
* {
  /* Est. 2012; https://www.paulirish.com/2012/box-sizing-border-box-ftw/ */
  box-sizing: border-box;
}
html {
  /* From normalize:;
   * Prevent adjustments of font size after orientation changes in iOS.
   */
  -webkit-text-size-adjust: 100%;
  /* Show scroll bar to avoid jumpy content alignment
   * when navigate between pages with less or more 
   * and those overflowing the vertical viewport
   */
  overflow-y: scroll;
}
body, 
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
dl, dd, 
hr, 
figure, figcaption, 
iframe, 
fieldset, legend, input, textarea, select {
	margin: 0;
	padding: 0;
}
ul, ol {
  margin: 0;
}
iframe, hr {
  border: 0;
}
/* Add support for html5 elements in older browsers */
article, aside, details, 
footer, header, menu, nav, section,
hgroup,
figcaption, figure,  {
  display: block;
}
a {
  text-decoration: none;
  outline: 0;
  /* From normalize:
   * Remove the gray background on active links in IE 10.
   */
  background-color: transparent;
}
b, strong {
  /* From normalize:
   * Add the correct font weight in Chrome, Edge, and Safari.
   */
  font-weight: bolder;
}
img {
  /* Fix white space below images */
  vertical-align: bottom;
  /* From normalize:
   * Remove the border on images inside links in IE 10.
   */
  border-style: none;
}
abbr {
  cursor: help;
}
button, select {
  /* From normalize:
   * Remove the inheritance of text transform in Edge, Firefox, and IE.
   */
  text-transform: none;
}
button, [type=button], [type=reset], [type=submit] {
  /* From normalize:
  * Correct the inability to style clickable types in iOS and Safari.
  */
  -webkit-appearance: button;
  outline: none;
}
template {
  /* From normalize:;
   * Add the correct display in IE 10+.
   */
  display: none;
}
[hidden] {
  /* From normalize
   * Add the correct display in IE 10.
   */
  display: none;
}


/**
 * Base
 *
 * Define css custom properties
 * and style html elements globally
 * only few classes included
 *
 * Contents:
 * Custom properties
 * Document
 * Text
 * Links
 * Lists
 * Tables
 * Buttons
 * Form items
 */

 /**
  * Custom properties
  *
  * a.k.a variables
  * Changing this will affect almost everything ahead
  *
  * Contents:
  * Fonts
  * Text size & Rhytm unit
  * Color schemes
  * * Base scheme
  * * Notification scheme
  * Extras
  */
 :root {
  /**
   * Fonts
   *
   * Fonts Make things look prettier
   * choose wisely
   */
  --text-font: 'Inconsolata', serif;
  --heading-font: 'Montserrat', sans-serif;
  /**
   * Font size & rhytm unit
   *
   * With this 
   * but difficult to handle 
   */
  --base-font-size: 16px;
  --rhytm-unit: 20px;
  /**
   * Color schemes
   */
  /**
   * Base scheme
   *
   * A split-complementary color scheme
   * a black that is not that black for text
   * 
   * Tools & reference:
   * https://www.sessions.edu/color-calculator/
   * https://ianstormtaylor.com/design-tip-never-use-black/
   */
  --base-color: #0b162a;
  --complementary-color-1: #e35835;
  --complementary-color-2: #cde534;
  --neutral-color: #fbfbfb;
  --heading-color: var(--base-color);
  --text-color: #1a1a1a;
  /* Color variations are automatically generated
   * using postCSS color function plugin
   * @todo Review class name for a more descriptive, semantic
   * Tools & reference:
   * https://medium.com/@mihaeltomic/supercharge-your-colors-with-the-postcss-color-function-e4459ca9554e
   */
  --color-variant: -12;
  /**
   * Notification scheme
   */
  --information-color: #caeaf9;
  --information-text-color: #00529b;
  --warning-color: #feefb3;
  --warning-text-color: #9f6000;
  --error-color: #ffc8c8;
  --error-text-color: #d8000c;
  --success-color: #e5f5cc;
  --success-text-color: #4f8a10;
  /**
   * Extras
   */
  /* Max-width for a boxed container */
  --box-width: 80%;
  /* border-radius value
   * will apply globally for buttons &
   * .rounded helper class
   */
  --rounded: 0;
  --rounded-utility: 4px;
 }

/**
 * Document
 */
html, body {
  font-family: var(--text-font);
  font-size: var(--base-font-size);
  line-height: var(--rhytm-unit);
  color: var(--text-color);
}
/**
 * Text
 * 
 */
p, a, q, cite, pre, code, ul, ol, dl { 
  font-size: 1rem;
  line-height: var(--rhytm-unit);
}
h1, .h1 {
  font-size: 4.8750rem;      /* 78/16 */
  line-height: calc(5 * var(--rhytm-unit));
}
h2, .h2 {
  font-size: 2.8750rem;      /* 46/16 */
  line-height: calc(3 * var(--rhytm-unit));
}
h3, .h3 {
  font-size: 1.8750rem;      /* 30/16 */
  line-height: calc(3 * var(--rhytm-unit));
}
h4, .h4 {
  font-size: 1.3750rem;      /* 22/16 */
  line-height: calc(2 * var(--rhytm-unit));
}
h5, .h5 {
  font-size: 1.1250rem;      /* 18/16 */
  line-height: calc(2 * var(--rhytm-unit));
}
h6, .h6 {
  font-size: 0.8750rem;      /* 14/16 */
  line-height: var(--rhytm-unit);
}
h1, h2, h3, h4, h5, h6 {
  font-family: var(--heading-font);
  color: var(--heading-color);
}
h1, h2, h3, h4, h5, h6, p, cite, ul ul, ol ol {
  margin-top: calc(.5 * var(--rhytm-unit));
  margin-bottom: calc(.5 * var(--rhytm-unit));
}
ul, ol {
  margin-top: var(--rhytm-unit);
  margin-bottom: var(--rhytm-unit);
}
small {
  /* @todo Fix element height as it does not fit into rhytm unit */
  font-size: 0.7500rem;      /* 12/16 */
}
sub, sup {
  /* @todo Test if this prevent sub & sup affecting line height in all browsers */
  line-height: 0;
}
blockquote {
  padding: calc(1.5 * var(--rhytm-unit));
  margin-left: calc(2 * var(--rhytm-unit));
  border-left: 2px solid var(--complementary-color-1);
}
cite {
  display: inline-block;
  width: 100%;
  text-align: right;
}
pre {
  padding: calc(.5 * var(--rhytm-unit));
  background-color: var(--neutral-color);
}
hr {
  height: 1px;
  /* Substract the element height
   * to keep block height into rhytm unit
   */
  margin: calc(var(--rhytm-unit) - 1px) var(--rhytm-unit);
  background-color: var(--complementary-color-1);
}
/**
 * Links
 */
a {
  transition: all .4s ease-out;
  /* Transparent border is added to prevent jumpy transition on hover */
  border-bottom: 1px solid transparent;
}
/* Default color: complementary-color-1 */
a:link, a:visited {
    color: var(--complementary-color-1);
}
a:hover, a:active, a.active {
  border-color: var(--complementary-color-1);
}
a.variant:link, a.variant:visited {
  color: var(--complementary-color-2);
}
a.variant:hover, a.variant:active a.variant.active {
  border-color: var(--complementary-color-2);
}
/**
 * Lists
 */
ul, ol {
  padding-left: calc(2 * var(--rhytm-unit));
}
li {
  position: relative;
}
ul.custom, ol.custom, 
ul.custom ul, ul.custom ol,
ol.custom ul, ol.custom ol {
  list-style: none;
}
ul.custom li:before {
  position: absolute;
  content: '';
  display: block;
  width: calc(.25 * var(--rhytm-unit));
  height: calc(.25 * var(--rhytm-unit));
  background-color: var(--complementary-color-1);
  left: calc(-1 * var(--rhytm-unit));
  top: calc(.375 * var(--rhytm-unit));
  border-radius: 50%;
}
ul.custom.outlined li:before {
  width: calc(.20 * var(--rhytm-unit));
  height: calc(.20 * var(--rhytm-unit));
  border: 1px solid var(--complementary-color-1);
  background-color: transparent;
}
ul.custom.square > li:before, 
ul.custom.diamond > li:before, 
ul.custom.dash > li:before {
  border-radius: 0;
}
ul.custom.diamond > li:before {
  transform: rotate(45deg);
}
ul.custom.dash > li:before {
  width: calc(.5 * var(--rhytm-unit));
  height: calc(.125 * var(--rhytm-unit));
  top: calc(.5 * var(--rhytm-unit));  
}
ul.custom.variant {
  background: var(--complementary-color-2);
}
dt {
  font-weight: bold;
}
dd {
  padding-left: calc(.5 * var(--rhytm-unit));
}
/**
 * Tables
 */

/**
 * Buttons
 *
 * Contents:
 * Default button
 * Variant button
 * Outlined button
 * Disabled button
 */
/* Default button */
button, 
.button,
a.button,
input[type=button], 
input[type=submit], 
input[type=reset] {
    position: relative;
    display: inline-block;
    border: 2px solid var(--complementary-color-1);
    /* Substract the element border
     * to keep block height into rhytm unit
     */
    padding: calc(.5 * var(--rhytm-unit) - 2px) calc(1 * var(--rhytm-unit));
    background: var(--complementary-color-1);
    font-family: var(--text-font);
    font-size: 1em;
    line-height: var(--rhytm-unit);
    vertical-align: middle;
    text-align: center;
    text-transform: uppercase;
    color: white;
    cursor: pointer;
    transition: all .4s ease-out;
    border-radius: var(--rounded);
}
button:hover, 
.button:hover, 
a.button:hover,
input[type=button]:hover,
input[type=submit]:hover, 
input[type=reset]:hover {
  background: color(var(--complementary-color-1) lightness(var(--color-variant)));
  border-color: color(var(--complementary-color-1) lightness(var(--color-variant)));
}
button:focus, 
.button:focus, 
a.button:focus,
input[type=button]:focus,
input[type=submit]:focus, 
input[type=reset]:focus {
    box-shadow: 0 0 6px var(--complementary-color-1);
}
/* Variant button */
button.variant, 
.button.variant, 
a.button.variant,
input[type=button].variant,
input[type=submit].variant, 
input[type=reset].variant {
  background: var(--complementary-color-2);
  border-color: var(--complementary-color-2);
  color: white;
}
button.variant:hover, 
.button.variant:hover, 
a.button.variant:hover,
input[type=button].variant:hover,
input[type=submit].variant:hover, 
input[type=reset].variant:hover {
  background-color: color(var(--complementary-color-2) lightness(var(--color-variant)));
  border-color: color(var(--complementary-color-2) lightness(var(--color-variant)));
}
button.variant:focus, 
.button.variant:focus, 
a.button.variant:focus,
input[type=button].variant:focus,
input[type=submit].variant:focus, 
input[type=reset].variant:focus {
    box-shadow: 0 0 6px var(--complementary-color-2);
}
/* Outlined button */
button.outlined, 
.button.outlined, 
a.button.outlined,
input[type=button].outlined,
input[type=submit].outlined, 
input[type=reset].outlined {
  background: transparent;
  color: var(--complementary-color-1);
}
button.variant.outlined, 
.button.variant.outlined, 
a.button.variant.outlined,
input[type=button].variant.outlined,
input[type=submit].variant.outlined, 
input[type=reset].variant.outlined {
  color: var(--complementary-color-2);
}
button.variant.outlined:hover, 
.button.variant.outlined:hover, 
a.button.variant.outlined:hover,
input[type=button].variant.outlined:hover,
input[type=submit].variant.outlined:hover, 
input[type=reset].variant.outlined:hover {
  background: color(var(--complementary-color-2) lightness(var(--color-variant)));
  color: white;
}
button.outlined:hover, 
.button.outlined:hover, 
a.button.outlined:hover,
input[type=button].outlined:hover,
input[type=submit].outlined:hover, 
input[type=reset].outlined:hover {
  background: color(var(--complementary-color-1) lightness(var(--color-variant)));
  color: white;
}
/* Disabled button */
input[type=submit]:disabled, 
button:disabled {
    background: transparent;
    color: var(--neutral-color);
    border-color: var(--neutral-color);
    cursor: default;
}
/**
 * Form items
 */


/**
 * Components
 * 
 * Layout & custom re-usable elements
 *
 * Contents:
 * Container
 * Sticky footer
 * (Flexbox) Grid
 * Notifications
 */
/**
 * Container
 */
.container {
  position: relative;
  width: 100%;
  max-width: 100%;
}
.container.boxed {
  max-width: var(--box-width);
  margin: 0 auto;
}
/* Sticky footer */
body.sticky-footer {
  display: flex;
  flex-direction: column;
}
body.sticky-footer section {
  flex: 1 0 auto;
}
body.sticky-footer footer {
  flex: 0 0 auto;
}
/**
 * (Flexbox) Grid
 * @transition-duration: switch to CSS Grid layout
 */
.grid, .grid.column {
  display: -ms-flexbox;
  display: flex;
  flex-flow: row wrap;
  transition: all .4s ease-out;
}
.grid.align-c {
  justify-content: center;
}
.grid.align-l {
  justify-content: flex-end;
}
.grid.valign-c {
  align-items: center;
}
.grid.valign-b {
  align-items: flex-end;
}
/* (Flexbox) Grid Columns */
.grid .column {
  flex: 1;
}
.padded.column {
  padding: calc(.5 * var(--rhytm-unit));
}
.one-half.column {
  flex: 0 0 50%;
}
.one-third.column {
  flex: 0 0 33.33%;
}
.one-quarter.column {
  flex: 0 0 25%;
}
.two-thirds.column {
  flex: 0 0 66.66%;
}
.three-quarters.column {
  flex: 0 0 75%;
}
@media (max-width: 780px) {.grid, .grid.column {
    flex-flow: column;
  }
  /** 
   * Changing the flex-flow will change the main axis to vertical
   * so we swap the the properties align-items & justify-content
   * for the alignment helpers 
   */
  .grid.align-c {
    align-items: center;
  }
  .grid.align-l {
    align-items: flex-end;
  }
  .grid.valign-c {
    justify-content: center;
  }
  .grid.valign-b {
    justify-content: flex-end;
  }
  .one-half.column,
  .one-third.column,
  .one-quarter.coilumn,
  .two-thirds.column,
  .three-quarters.column {
    width: 100%;
  }
}


/**
 * Utilities
 *
 * 
 *
 */
/* BEEP BEEP Richie! They ALL float down here. When you're down here with us, you'll float too! */
.float-l {
  float:left;
}
.float-r {
  float:right;
}
/* Clearfix */
.clearfix:before,
.clearfix:after {
  content: ' '; /* 1 */
  display: table; /* 2 */
}
.clearfix:after {
  clear: both;
}
/* Visually */
.hidden {
  display: none;
}
.invisible {
  visibility: hidden;
}
/* Old school image replacement */
.ir {
  display:inline-block;
  background-color:transparent;
  border:0;
  text-indent:100%;
  white-space:nowrap;
  overflow:hidden;
}
.ir:before {
  display:block;
  width:0;
  height:100%;
}
/* Rounded corners */
.rounded {
  border-radius: var(--rounded-utility)!important;
}
/* text alignemt */
.align-l {
  text-align:left;
}
.align-r {
  text-align:right;
}
.align-c {
  text-align:center;
}